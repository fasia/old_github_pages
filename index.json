[{"authors":null,"categories":null,"content":"My research interest is on evaluating the quality of web services via automatic test generation. My work includes the following topics: – Combining model-based testing and mutation testing for evaluating the robustness and vulnerabilities of web services, – Developing test automation frameworks for generating mutants from models, – Conducting experiments on model-based test design, test generation and test execution for web services.\nMy minor subject in MSs. was business and entrepreneurship, therefore, I have interest in challenging myself to develop, organize and run a business enterprise, with all of its uncertainties. Recently, I am exploring this area as well.\n  Check my resumé.\n","date":1532044800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1532044800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"My research interest is on evaluating the quality of web services via automatic test generation. My work includes the following topics: – Combining model-based testing and mutation testing for evaluating the robustness and vulnerabilities of web services, – Developing test automation frameworks for generating mutants from models, – Conducting experiments on model-based test design, test generation and test execution for web services.","tags":null,"title":"Faezeh Siavashi","type":"authors"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"fasia.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"fasia.github.io/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Faezeh Siavashi","Dragos Truscan","Juri Vain"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1532044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1532044800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"fasia.github.io/publication/example/","publishdate":"2018-07-20T00:00:00Z","relpermalink":"fasia.github.io/publication/example/","section":"publication","summary":"We present a model-based mutation testing approach, for evaluating the authentication and authorization of web services in a multi-user context. Model of a web service and its security requirements are designed using UPPAAL Timed Automata. The model is mutated to create invalid behavior which is used for test generation to reveal faults in the system under test. The approach is supported by a model-based mutation testing tool, μUTA, that automatically generates mutants, selects a collection of suitable mutants for testing and generates test cases from them. We modify a previously defined mutation operator and introduce three new operators for additional mutants. We define criteria for the mutation-selection and demonstrate the approach on a blog web service. Results show that the approach can discover authorization faults that were not detected by traditional methods.","tags":["model-based Testing","mutation testing","web services"],"title":"Vulnerability assessment of web services with model-based mutation testing","type":"publication"},{"authors":null,"categories":null,"content":"","date":1491004800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1491004800,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"fasia.github.io/project/example/","publishdate":"2017-04-01T00:00:00Z","relpermalink":"fasia.github.io/project/example/","section":"project","summary":"Scalable model-based framework for continuous development and runtime validation of complex systems","tags":["Model-based Testing","Runtime Analysis","Mutation Testing","REST API"],"title":"Mega Modeling Project","type":"project"},{"authors":null,"categories":null,"content":"","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"2335432d515128d5339aef84c137083c","permalink":"fasia.github.io/project/mut-proj/","publishdate":"2015-09-01T00:00:00Z","relpermalink":"fasia.github.io/project/mut-proj/","section":"project","summary":"A supporting tool that serves as part of security and robustness testing toolchain. µUTA extends online model-based testing by Uppaal Tron and generates systematic mutatants.","tags":["Model-based Mutation Testing","Toolbox","Security vulnerability assessment"],"title":"µUTA Model-based Mutation Tool","type":"project"},{"authors":null,"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376000,"objectID":"dddc7b00c4f79396119f7617a5e3ce35","permalink":"fasia.github.io/project/pam/","publishdate":"2012-01-01T00:00:00Z","relpermalink":"fasia.github.io/project/pam/","section":"project","summary":"Practical Applications of Model-based technologies to continuous integration \u0026 testing methodologies","tags":["Model-based Testing","Model-checking","Environment modeling"],"title":"PAM Project","type":"project"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"fasia.github.io/talk/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"fasia.github.io/talk/","section":"event","summary":"Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.","tags":[],"title":"","type":"event"}]